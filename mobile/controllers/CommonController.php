<?php
/**
 * M端公共控制器
 * @file CommonController.php
 * @author shangheguang <shangheguang@yuanxin-inc.com>
 * @version 2.0
 * @date 2020-07-10
 */

namespace mobile\controllers;

use common\libs\CommonFunc;
use common\widgets\BaiduStatisticsWidget;
use yii\web\Controller;
use yii\web\Response;
use nisiya\ucentersdk\Config;
use common\helpers\PatientLogin;
use common\libs\Log;

class CommonController extends Controller
{

    public $seoTitle = '';
    public $seoKeywords = '';
    public $seoDescription = '';
    public $pageSize = 20; //列表每页数据量
    public $nav = ''; //面包屑导航
    public $autoArr = [];
    public $user_id;
    //埋点数据
    public $register_event = [
        "page" =>"挂号相关页面浏览",
        "event_name" => "HOSPITAL_View_All",
        "event_type" => "浏览事件",
        "event_alias" => "挂号相关页面浏览",
        "event_trigger" => "页面加载完成",
        "url" => "",
        "batch_code" => "V1.0.0",
        "app_name" => "医院业务_H5",
        "params" => ""
    ];


    public $register_point = [
        'hospital_id' => '',
        'hospital_name' => '',
        'doctor_id' => '',
        'doctor_name' => '',
        'provice' => '',
        'city' => '',
        'register_id' => '',
        'page_title' => '品牌医生挂号首页'
    ];

    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub
        $start_time = microtime(true);
        $this->nav = $this->getRoute();
        // $staticPath = rtrim(\Yii::$app->params['domains']['cdn'], '/') . '/mobile/hospital/static/';
        $staticPath = rtrim(\Yii::$app->params['domains']['cdn'], '/') . '/mobile/hospital-new/static/';
        \Yii::setAlias('@static', $staticPath);

        //民营医院cdn路径
        $staticPathTwo = rtrim(\Yii::$app->params['domains']['cdn'], '/') . '/mobile/hospital-hzyy/src/';
        \Yii::setAlias('@staticTwo', $staticPathTwo);

        //初始化用户中心sdk
        Config::setConfig(\Yii::$app->params['usersdk']);
        $commonStaticPath = rtrim(\Yii::$app->params['domains']['cdn'], '/') . '/mobile/';
        \Yii::setAlias('@mobileCommonStatic', $commonStaticPath);

        BaiduStatisticsWidget::widget([
            'controller'=>$this
        ]);

        //用户登录
        $uc_login_key = \Yii::$app->request->get('login_key_expire'); //0be4dd0c161ab92a670431e618211b4e_1548386104
        if($uc_login_key){
            //先检测cookie是否不为空
            $cookies = \Yii::$app->request->cookies;
            $uc_logined = $cookies->getValue('uc_logined', '');
            if ($uc_logined != '' && $uc_login_key != $uc_logined) {
                PatientLogin::removeLoginCookie();
            }

            $this->user_id = PatientLogin::setLogin($uc_login_key);
            //设置完登录后 去除参数跳转
            $path = \Yii::$app->request->getPathInfo();
            $url = rtrim(\Yii::$app->params['domains']['mobile'], '/') . '/'.$path;

            $getParams = \Yii::$app->request->getQueryParams();
            unset($getParams['login_key_expire']);
            $paramStr = http_build_query($getParams);
            $url .= '?'.$paramStr;
            $this->redirect($url);
        }
        $this->user_id =  PatientLogin::isLogin();
        $this->autoArr = $autoArr = CommonFunc::get_city_cookie(true); //自动定位

        //记录refer
        $srefer = \Yii::$app->request->get('srefer');
        $skey = \Yii::$app->request->get('skey');
        if ($srefer == 'kedaxunfei' && $skey == 'kedaxunfei') {
            //异步记录请求日志
            $this->addKedaLog($start_time);
        }
        CommonFunc::setReferCookie($srefer, $skey);
    }

    //记录科大讯飞请求日志
    public function addKedaLog($start_time)
    {
        //异步记录请求日志
        $log["URL"] = $_SERVER['HTTP_HOST'].$_SERVER['REQUEST_URI'];
        $log["action"] = \Yii::$app->request->getPathInfo();
        $log["param"] = \Yii::$app->request->get();
        $log["IP"] = CommonFunc::getIp();
        $log['platform'] = 203; //科大讯飞
        $log['request_type'] = \Yii::$app->request->getPathInfo();
        $log['index'] = \Yii::$app->request->getPathInfo();
        $log['cur_log']['log_code'] = 200;
        $log['cur_log']['log_spend_time'] = round(microtime(true) - $start_time, 2);;
        Log::pushLogDataToQueues($log);
    }

    //格式化埋点数据
    public function formatEvent($param)
    {
        $this->register_point['hospital_id'] = $param['hospital_id'] ?? "";
        $this->register_point['hospital_name'] = $param['hospital_name'] ?? "";
        $this->register_point['doctor_id'] = $param['doctor_id'] ?? "";
        $this->register_point['doctor_name'] = $param['doctor_name'] ?? "";
        $this->register_point['provice'] = $param['provice'] ?? "";
        $this->register_point['city'] = $param['city'] ?? "";
        $this->register_point['register_id'] = $param['register_id'] ?? "";
        $this->register_point['page_title'] = $param['page_title'] ?? "";

        $this->register_event['uid'] = ($this->user_id > 0) ? $this->user_id : 0;
        $this->register_event['url'] = CommonFunc::getUrl() ?? "";
        $this->register_event['page'] = $param['page'] ?? "";
        $this->register_event['params'] = json_encode($this->register_point, 256);
        return json_encode($this->register_event, 256);
    }

    /**
     * 过滤seo信息中出现的特殊字符
     * @author shangheguang <shangheguang@yuanxin-inc.com>
     * @date 2020-07-10
     * @param $content
     * @return mixed|string
     */
    public function filterSeoContent($content)
    {
        //过滤html标签
        $content = strip_tags($content);
        $content = str_replace('>', '', $content);
        $content = str_replace('<', '', $content);

        $content = preg_replace("/(\s|\&nbsp\;|　|\xc2\xa0)/", "", $content);
        //过滤html特殊字符
        $content = htmlspecialchars($content);
        //过滤空白字符
        preg_filter("/\s/",'', $content);
        //过滤双引号
        $content=str_replace('"',"'", $content);
        return mb_substr($content, 0, 200);
    }

    /**
     * 过滤内容
     * @author shangheguang <shangheguang@yuanxin-inc.com>
     * @date 2020-07-10
     * @param $content
     * @return mixed|string
     */
    public function filterContent($content)
    {
        //过滤html标签
        $content = strip_tags($content);
        $content = str_replace('>', '', $content);
        $content = str_replace('<', '', $content);
        $content = preg_replace("/(\s|\&nbsp\;|　|\xc2\xa0)/", "", $content);
        //过滤html特殊字符
        $content = htmlspecialchars($content);
        //过滤空白字符
        preg_filter("/\s/",'', $content);
        //过滤双引号
        $content=str_replace('"',"'", $content);
        return mb_substr($content, 0, 100);
    }

    /**
     * 获取APP分享的URL
     * @author shangheguang <shangheguang@yuanxin-inc.com>
     * @date 2020-07-10
     * @param string $baseUrl 链接
     * @param array $config 数组
     * @return string
     */
    public function appShareUrl($baseUrl, $config = [])
    {
        return 'pd://' . $baseUrl . '?' . http_build_query($config, null, '&', PHP_QUERY_RFC3986);
    }

    public function getUserAgent()
    {
        //患者端
        //perfectdoc_v3.3.5 Mozilla/5.0 (Linux; U; Android 4.2.2; zh-cn; Hol-T00 Build/HUAWEIHol-T00) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30
        //医生端
        //doctor_v3.3.5 Mozilla/5.0 (Linux; U; Android 4.2.2; zh-cn; Hol-T00 Build/HUAWEIHol-T00) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30

        $userAgent =\Yii::$app->request->userAgent;
        $userAgent=strtolower($userAgent);
        //患者
        if (strpos($userAgent, 'perfectdoc') !== false) {
            return 'patient';
        }
        //医生
        if (strpos($userAgent, 'doctor') !== false) {
            return 'doctor';
        }

        //小程序
        if (strpos($userAgent, 'miniprogram') !== false && strpos($userAgent, 'micromessenger') !== false) {
            return 'mini';
        }
        //微信
        if (strpos($userAgent, 'micromessenger') !== false ) {
            return 'wechat';
        }

        //好多中医 同第三方约定ua的唯一标识
        if (strpos($userAgent, 'haoyiapp') !== false ) {
            return 'haoyiapp';
        }

        //头条小程序
        // if (strpos($userAgent, 'toutiaomicroapp') !== false ) {
        //     return 'toutiaomini';
        // }

        //手机端和pc端
        return 'wap';
    }

        /**
     * [wechatAppletUrl 微信 小程序链接跳转]
     * @author yangquanliang <yangquanliang@yuanxin-inc.com>
     * @date 2019/03/21
     * @param  string  $url [参数]
     * @param  string  $key [参数]需要转义的key
     * @param  array  $params [参数]需要转义的参数值
     * @param  string  $wechatUrl 小程序href
     * @return [type]         [string]
     */
    public function wechatAppletUrl($url = '', $key = '', $params = [], $wechatUrl = ''){
        // $this->view->registerJsFile('https://res.wx.qq.com/open/js/jweixin-1.3.2.js',['position'=>\yii\web\View::POS_HEAD]);
            $keyInfo = '';
            if (!$wechatUrl) {
                $wechatUrl = 'https://a.app.qq.com/o/simple.jsp?pkgname=com.yuanxin.perfectdoc&fromcase=10000';
            }
            if ($key && $params) {
                $keyInfo = rawurlencode(json_encode($params));
            }
            if ($keyInfo) {
                $wechatProgramUrl = $url."{$key}={$keyInfo}";
            }else{
                $wechatProgramUrl = $url;
            }
            
            $js=<<<js
        $(function(){
            $(document).on('click','[data-item="consult_url"]',function(){
                if(window.__wxjs_environment === 'miniprogram'){
                    console.log(1120);
                    wx.miniProgram.redirectTo({
                        url: decodeURI($(this).data('consult-url'))
                    })
                    return false;
                }
             })
        })
js;
            $this->view->registerJs($js,\yii\web\View::POS_END);

            return ' data-item="consult_url" data-consult-url="'.$wechatProgramUrl.'"  href="'.$wechatUrl.'" ';
    }


    /**
     * 返回成功的json数据
     * @param array $data
     * @param string $msg
     * @return array
     */
    protected function jsonSuccess($data = [], $msg = 'success')
    {
        $return['code'] = 200;
        $return['msg'] = $msg;
        $return['data'] = $data;
        return $this->jsonOutputCore($return);
    }

    /**
     * 返回失败的json数据
     * @param string $msg
     * @param int $code
     * @return array
     */
    protected function jsonError($msg = '', $code = 400)
    {
        $return['code'] = $code;
        $return['msg'] = $msg;
        $return['data'] = (object)[];
        return $this->jsonOutputCore($return);
    }

    /**
     * json输出的核心
     * @param $data
     * @return array
     */
    protected function jsonOutputCore($data)
    {
        \Yii::$app->response->format = Response::FORMAT_JSON;
        //所有内容输出转换为字符型;
        array_walk_recursive($data['data'], function (&$value) {
            $value = strval($value);
        });
        return $data;
    }
}